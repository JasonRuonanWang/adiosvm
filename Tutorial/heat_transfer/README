2D Heat Transfer example 
Fortran 90 code, 2D array with 2D decomposition

1. Build
--------
Edit make.settings 
- compiler and compiler options
- ADIOS 2.x installation directory
- optionally 
   ADIOS 1.x installation directory
   Parallel HDF5 installation directory

$ cd simulation
$ make adios2
$ cd ..

$ cd analysis
$ make adios2 steps2
$ cd ..

2. Run
-------

$ ./simulation heat_transfer_adios2
 Usage: heat_transfer  output  N  M   nx  ny   steps iterations
 output: name of output file
 N:      number of processes in X dimension
 M:      number of processes in Y dimension
 nx:     local array size in X dimension per processor
 ny:     local array size in Y dimension per processor
 steps:  the total number of steps to output
 iterations: one step consist of this many iterations

$ mpirun -np 12 simulation/heat_transfer_adios2 heat  4 3    40 50   6 500

will perform the calculation 
- on 12 processes 
- on a 4*40 x 3*50 2D array (Fortran column-major ordering)
- for 6*500 iterations, 
- producing an output of 6 steps stored in heat.bp 

$ bpls -l heat.bp T
  integer  gndx  scalar = 160
  double   T     6*{150, 160} = -0.263389 / 2.9984 / null  / null 
  integer  gndy  scalar = 150
  double   dT    6*{150, 160} = -0.000847309 / 0.00227756 / null  / null

$ ./plot_heat.sh heat.bp
$ eog . 


---------------
Staging demos
---------------

A 100 output step on less processes, with more computation between steps. 
In adios2.xml, use "SST" for engine of the io group "heat"

In two terminal windows:

$ mpirun -n 4 simulation/heat_transfer_adios2 heat 2 2 300 300 100 600
$ mpirun -n 2 analysis/heat_read_steps2 heat.bp

or 

$ mpirun -n 4 simulation/heat_transfer_adios2 heat 2 2 300 300 100 600
$ mpirun -n 2 /opt/adios2/bin/adios2_reorganize heat.bp staged.bp SST "" BPFile "" 2 1


--- With ADIOS 1.x using heat_transfer_adios1 binary ---

If output method in adios1.xml is FLEXPATH, 
you need two terminals. Run the staging reader-writer in one terminal and
the simulation in another terminal. The order of startup does not matter.

$ mpirun -np 2 stage_write/stage_write heat.bp staged.bp FLEXPATH "" MPI "" 2
$ mpirun -np 4 ./heat_transfer_adios2 heat 2 2 300 300 100 600

If output method in adios1.xml is DATASPACES, 
you need three terminals. 
Run the DataSpaces server first in one terminal and tell the app 
the number of servers and clients.
Run the staging reader-writer in another terminal. 
Run the simulaton in yet another terminal.
Server must start first, the order of reader and writer does not matter.

$ /opt/dataspaces/bin/dataspaces_server -s 1 -c 6
$ mpirun -np 4 ./heat_transfer_adios2 heat 2 2 300 300 100 600
$ mpirun -np 2 stage_write/stage_write heat.bp staged.bp DATASPACES "" MPI "" 2



